##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
#

# this specifies that there is a WSGI server running on port 5000
upstream app_server_djangoapp {
     server localhost:5000 fail_timeout=0;
}
upstream app_server_djangoapp_5001 {
     server localhost:5001 fail_timeout=0;
}

# Default server configuration
# nginx is set up to run on the standard HTTP port (80) and listen for request
# It also permanently redirect when resource has been move and shows error when
# resource is not found or wrong url
server {
	listen 80 default_server;
	listen [::]:80 default_server;
	rewrite /redirect_me https://github.com/Topsurpass/ permanent;
	error_page 404 /custom_404.html;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;
	
	#Let the http header include the hostname using HOSTNAME variable
	add_header X-Served-By $HOSTNAME;

	#default path to start searching for files
	root /var/www/html;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	server_name _;

	# nginx should serve up static files and never send to the WSGI server
	# use default root path to search for files
	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}
	
	# Another path to start static files using path specifiled in alias
	location /hbnb_static/ {
		alias /data/web_static/current/;
		autoindex off;
	}
	
	# Another path to start static files using path specifiled in alias
	location /layomi/ {
		alias /Layo/www/current/;
		autoindex off;
	}

	# requests that do not fall under /, /hbnb_static/ and /layomi/ are passed on to the WSGI
	#
	#server that was specified above running on port 5000
	location /airbnb-onepage/ {
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
		proxy_redirect off;

		if (!-f $request_filename) {
      			proxy_pass http://app_server_djangoapp;
     		 	break;
    		}
	}
	#server that was specified above running on port 5001
	location ~ /airbnb-dynamic/number_odd_or_even/(\d+) {
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
		proxy_redirect off;

		if (!-f $request_filename) {
      			proxy_pass http://app_server_djangoapp_5001/number_odd_or_even/$1;
     		 	break;
    		}
	}

	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
